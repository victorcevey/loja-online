create database LojaOnline;

use LojaOnline;

CREATE TABLE Clientes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  data_cadastro DATE NOT NULL
);

CREATE TABLE Produtos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(255) NOT NULL,
  preco DECIMAL(10,2) NOT NULL,
  estoque INT NOT NULL,
  categoria VARCHAR(100) NOT NULL
);

CREATE TABLE Pedidos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cliente_id INT NOT NULL,
  data_pedido DATE NOT NULL,
  valor_total DECIMAL(10,2) NOT NULL,
  FOREIGN KEY (cliente_id) REFERENCES Clientes(id)
);

CREATE TABLE ItensPedido (
  id INT AUTO_INCREMENT PRIMARY KEY,
  pedido_id INT NOT NULL,
  produto_id INT NOT NULL,
  quantidade INT NOT NULL,
  subtotal DECIMAL(10,2) NOT NULL,
  FOREIGN KEY (pedido_id) REFERENCES Pedidos(id),
  FOREIGN KEY (produto_id) REFERENCES Produtos(id)
);


SELECT * FROM Produtos ;

INSERT INTO Clientes (nome, email, data_cadastro) VALUES
('Ana Pereira', 'ana.pereira@email.com', '2025-05-01'),
('Bruno Oliveira', 'bruno.oliveira@email.com', '2025-04-15'),
('Carla Mendes', 'carla.mendes@email.com', '2025-05-20');

INSERT INTO Produtos (nome, preco, estoque, categoria) VALUES
('Camiseta Básica', 39.90, 100, 'Roupas'),
('Tênis Esportivo', 120.50, 50, 'Calçados'),
('Smartphone XYZ', 899.99, 30, 'Eletrônicos'),
('Caneca Personalizada', 25.00, 200, 'Utilidades'),
('Fone de Ouvido', 75.00, 80, 'Eletrônicos');


 INSERT INTO Pedidos (cliente_id, data_pedido, valor_total) VALUES
(1, '2025-05-25', 250.75),
(2, '2025-05-20', 120.00),
(3, '2025-05-22', 340.40);

INSERT INTO ItensPedido (pedido_id, produto_id, quantidade, subtotal) VALUES
(1, 2, 1, 120.50),   -- Pedido 1, Produto 2, quantidade 1, subtotal 120.50
(1, 5, 2, 150.00),   -- Pedido 1, Produto 5, quantidade 2, subtotal 75.00 * 2 = 150.00
(2, 1, 3, 119.70),   -- Pedido 2, Produto 1, quantidade 3, subtotal 39.90 * 3 = 119.70
(3, 3, 1, 899.99);   -- Pedido 3, Produto 3, quantidade 1, subtotal 899.99


SELECT * FROM Clientes;


SELECT * FROM Produtos
WHERE preco > 50;


SELECT * FROM Produtos
ORDER BY preco DESC;

SELECT * FROM Clientes
WHERE data_cadastro > '2023-01-01';


SELECT SUM(estoque) AS total_estoque FROM Produtos;


SELECT AVG(preco) AS preco_medio FROM Produtos;

SELECT MAX(preco) AS preco_mais_caro FROM Produtos;

SELECT SUM(preco * estoque) AS valor_total_estoque FROM Produtos;

SELECT COUNT(*) AS total_pedidos FROM Pedidos;

SELECT categoria, COUNT(*) AS quantidade FROM Produtos
GROUP BY categoria;



SELECT Pedidos.id AS pedido_id, Clientes.nome AS cliente_nome, Pedidos.data_pedido, Pedidos.valor_total
FROM Pedidos
INNER JOIN Clientes ON Pedidos.cliente_id = Clientes.id;

SELECT Produtos.*
FROM Produtos
LEFT JOIN ItensPedido ON Produtos.id = ItensPedido.produto_id
WHERE ItensPedido.id IS NULL;

SELECT Produtos.*
FROM Produtos
LEFT JOIN ItensPedido ON Produtos.id = ItensPedido.produto_id
WHERE ItensPedido.id IS NULL;

SELECT cliente_id, SUM(valor_total) AS total_gasto
FROM Pedidos
GROUP BY cliente_id;
SELECT Clientes.nome, SUM(Pedidos.valor_total) AS total_gasto
FROM Pedidos
INNER JOIN Clientes ON Pedidos.cliente_id = Clientes.id
GROUP BY Clientes.nome;

SELECT Produtos.nome, SUM(ItensPedido.quantidade) AS total_vendido
FROM ItensPedido
INNER JOIN Produtos ON ItensPedido.produto_id = Produtos.id
GROUP BY Produtos.nome
ORDER BY total_vendido DESC
LIMIT 3;

-- Calcula o gasto individual e a média geral, mostrando lado a lado
SELECT 
  c.nome,
  COALESCE(SUM(p.valor_total), 0) AS gasto_individual,
  (SELECT AVG(total_gasto) FROM (
     SELECT SUM(valor_total) AS total_gasto
     FROM Pedidos
     GROUP BY cliente_id
  ) AS subconsulta) AS media_gastos
FROM Clientes c
LEFT JOIN Pedidos p ON c.id = p.cliente_id
GROUP BY c.id, c.nome;
